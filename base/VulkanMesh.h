#pragma once

#include <vector>
#include <string>

#include <glm/glm.hpp>
#define GLM_ENABLE_EXPERIMENTAL
#include <glm/gtx/hash.hpp>
#include <mikktspace.h>
#include <vulkan/vulkan.h>

namespace vku {
	struct VulkanDevice;

	struct Vertex {
		glm::vec3 pos;
		glm::vec3 color;
		glm::vec2 texCoord;
		glm::vec3 normal;
		glm::vec4 tangent;

		static VkVertexInputBindingDescription getBindingDescription();
		static std::vector<VkVertexInputAttributeDescription> getAttributeDescriptions();
		bool operator==(const Vertex& other) const;
	};

	struct VulkanMeshData {
		std::vector<Vertex> vertices;
		std::vector<uint32_t> indices;
		void serializeToCpp();
	};

	struct VulkanMeshBuffer {
		VulkanDevice* device;

		VkBuffer vBuffer;
		VkDeviceMemory vMemory;
		VkBuffer iBuffer;
		VkDeviceMemory iMemory;
		uint32_t indicesSize;

		VulkanMeshBuffer(VulkanDevice* device, const VulkanMeshData& mesh);
		void draw(VkCommandBuffer cmdbuf);
		~VulkanMeshBuffer();
	};
	const VulkanMeshData sphere = {
		{
				{{0, 0.707107, -0.707107}, {}, {}, {0, 0.6952, -0.7188}},
				{{0, 0.92388, -0.382683}, {}, {}, {0, 0.9152, -0.4031}},
				{{0.146447, 0.92388, -0.353553}, {}, {}, {0.1542, 0.9152, -0.3724}},
				{{0.270598, 0.707107, -0.653281}, {}, {}, {0.2751, 0.6952, -0.6641}},
				{{0, -0.92388, -0.382683}, {}, {}, {0, -0.9152, -0.4031}},
				{{0, -0.707107, -0.707106}, {}, {}, {0, -0.6952, -0.7188}},
				{{0.270598, -0.707107, -0.653281}, {}, {}, {0.2751, -0.6952, -0.6641}},
				{{0.146447, -0.92388, -0.353553}, {}, {}, {0.1542, -0.9152, -0.3724}},
				{{0, -0.382684, -0.92388}, {}, {}, {0, -0.3743, -0.9273}},
				{{1e-06, -0, -1}, {}, {}, {0, 0, -1}},
				{{0.382683, -0, -0.92388}, {}, {}, {0.3827, 0, -0.9239}},
				{{0.353553, -0.382684, -0.853553}, {}, {}, {0.3548, -0.3743, -0.8567}},
				{{0, 0.382683, -0.92388}, {}, {}, {0, 0.3743, -0.9273}},
				{{0.353553, 0.382683, -0.853553}, {}, {}, {0.3548, 0.3743, -0.8567}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{0.707107, -0, -0.707107}, {}, {}, {0.7071, 0, -0.7071}},
				{{0.653281, -0.382684, -0.653281}, {}, {}, {0.6557, -0.3743, -0.6557}},
				{{0.5, 0.707107, -0.5}, {}, {}, {0.5083, 0.6952, -0.5083}},
				{{0.653281, 0.382683, -0.653281}, {}, {}, {0.6557, 0.3743, -0.6557}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0.270598, 0.92388, -0.270598}, {}, {}, {0.285, 0.9152, -0.285}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{0.270598, -0.92388, -0.270598}, {}, {}, {0.285, -0.9152, -0.285}},
				{{0.5, -0.707107, -0.5}, {}, {}, {0.5083, -0.6952, -0.5083}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{0.353553, -0.92388, -0.146447}, {}, {}, {0.3724, -0.9152, -0.1542}},
				{{0.853553, -0.382684, -0.353553}, {}, {}, {0.8567, -0.3743, -0.3548}},
				{{0.653281, -0.707107, -0.270598}, {}, {}, {0.6641, -0.6952, -0.2751}},
				{{0.853553, 0.382683, -0.353553}, {}, {}, {0.8567, 0.3743, -0.3548}},
				{{0.923879, -0, -0.382683}, {}, {}, {0.9239, 0, -0.3827}},
				{{0.353553, 0.92388, -0.146447}, {}, {}, {0.3724, 0.9152, -0.1542}},
				{{0.653281, 0.707107, -0.270598}, {}, {}, {0.6641, 0.6952, -0.2751}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0.923879, 0.382683, -0}, {}, {}, {0.9273, 0.3743, 0}},
				{{1, -0, -0}, {}, {}, {1, 0, 0}},
				{{0.382683, 0.92388, -0}, {}, {}, {0.4031, 0.9152, 0}},
				{{0.707107, 0.707107, -0}, {}, {}, {0.7188, 0.6952, 0}},
				{{0.707107, -0.707107, -0}, {}, {}, {0.7188, -0.6952, 0}},
				{{0.382683, -0.92388, -0}, {}, {}, {0.4031, -0.9152, 0}},
				{{0.923879, -0.382684, -0}, {}, {}, {0.9273, -0.3743, 0}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{0.653281, -0.707107, 0.270598}, {}, {}, {0.6641, -0.6952, 0.2751}},
				{{0.353553, -0.92388, 0.146446}, {}, {}, {0.3724, -0.9152, 0.1542}},
				{{0.923879, -0, 0.382683}, {}, {}, {0.9239, 0, 0.3827}},
				{{0.853553, -0.382684, 0.353553}, {}, {}, {0.8567, -0.3743, 0.3548}},
				{{0.653281, 0.707107, 0.270598}, {}, {}, {0.6641, 0.6952, 0.2751}},
				{{0.853553, 0.382683, 0.353553}, {}, {}, {0.8567, 0.3743, 0.3548}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0.353553, 0.92388, 0.146446}, {}, {}, {0.3724, 0.9152, 0.1542}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{0.5, 0.707107, 0.5}, {}, {}, {0.5083, 0.6952, 0.5083}},
				{{0.653281, 0.382683, 0.653281}, {}, {}, {0.6557, 0.3743, 0.6557}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0.270598, 0.92388, 0.270598}, {}, {}, {0.285, 0.9152, 0.285}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{0.270598, -0.92388, 0.270598}, {}, {}, {0.285, -0.9152, 0.285}},
				{{0.653281, -0.382684, 0.653281}, {}, {}, {0.6557, -0.3743, 0.6557}},
				{{0.5, -0.707107, 0.5}, {}, {}, {0.5083, -0.6952, 0.5083}},
				{{0.707106, -0, 0.707107}, {}, {}, {0.7071, 0, 0.7071}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{0.146446, -0.92388, 0.353553}, {}, {}, {0.1542, -0.9152, 0.3724}},
				{{0.353553, -0.382684, 0.853553}, {}, {}, {0.3548, -0.3743, 0.8567}},
				{{0.270598, -0.707107, 0.653281}, {}, {}, {0.2751, -0.6952, 0.6641}},
				{{0.353553, 0.382683, 0.853553}, {}, {}, {0.3548, 0.3743, 0.8567}},
				{{0.382683, -0, 0.923879}, {}, {}, {0.3827, 0, 0.9239}},
				{{0.146446, 0.92388, 0.353553}, {}, {}, {0.1542, 0.9152, 0.3724}},
				{{0.270598, 0.707107, 0.653281}, {}, {}, {0.2751, 0.6952, 0.6641}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{-0, 0.92388, 0.382683}, {}, {}, {0, 0.9152, 0.4031}},
				{{-0, 0.707107, 0.707106}, {}, {}, {0, 0.6952, 0.7188}},
				{{-0, -0.707107, 0.707106}, {}, {}, {0, -0.6952, 0.7188}},
				{{-0, -0.92388, 0.382683}, {}, {}, {0, -0.9152, 0.4031}},
				{{-0, -0, 1}, {}, {}, {0, 0, 1}},
				{{-0, -0.382684, 0.923879}, {}, {}, {0, -0.3743, 0.9273}},
				{{-0, 0.382683, 0.923879}, {}, {}, {0, 0.3743, 0.9273}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{-0.270598, -0.707107, 0.653281}, {}, {}, {-0.2751, -0.6952, 0.6641}},
				{{-0.146447, -0.92388, 0.353553}, {}, {}, {-0.1542, -0.9152, 0.3724}},
				{{-0.382684, -0, 0.923879}, {}, {}, {-0.3827, 0, 0.9239}},
				{{-0.353554, -0.382684, 0.853553}, {}, {}, {-0.3548, -0.3743, 0.8567}},
				{{-0.270598, 0.707107, 0.653281}, {}, {}, {-0.2751, 0.6952, 0.6641}},
				{{-0.353554, 0.382683, 0.853553}, {}, {}, {-0.3548, 0.3743, 0.8567}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{-0.146447, 0.92388, 0.353553}, {}, {}, {-0.1542, 0.9152, 0.3724}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{-0.270598, 0.92388, 0.270598}, {}, {}, {-0.285, 0.9152, 0.285}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{-0.270598, -0.92388, 0.270598}, {}, {}, {-0.285, -0.9152, 0.285}},
				{{-0.653282, -0.382684, 0.653281}, {}, {}, {-0.6557, -0.3743, 0.6557}},
				{{-0.5, -0.707107, 0.499999}, {}, {}, {-0.5083, -0.6952, 0.5083}},
				{{-0.653282, 0.382683, 0.653281}, {}, {}, {-0.6557, 0.3743, 0.6557}},
				{{-0.707107, -0, 0.707106}, {}, {}, {-0.7071, 0, 0.7071}},
				{{-0.5, 0.707107, 0.499999}, {}, {}, {-0.5083, 0.6952, 0.5083}},
				{{-0.853553, -0.382684, 0.353553}, {}, {}, {-0.8567, -0.3743, 0.3548}},
				{{-0.653281, -0.707107, 0.270597}, {}, {}, {-0.6641, -0.6952, 0.2751}},
				{{-0.853553, 0.382683, 0.353553}, {}, {}, {-0.8567, 0.3743, 0.3548}},
				{{-0.923879, -0, 0.382683}, {}, {}, {-0.9239, 0, 0.3827}},
				{{-0.353553, 0.92388, 0.146446}, {}, {}, {-0.3724, 0.9152, 0.1542}},
				{{-0.653281, 0.707107, 0.270597}, {}, {}, {-0.6641, 0.6952, 0.2751}},
				{{-0.353553, -0.92388, 0.146446}, {}, {}, {-0.3724, -0.9152, 0.1542}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{-0.707106, -0.707107, -0}, {}, {}, {-0.7188, -0.6952, 0}},
				{{-0.382683, -0.92388, -0}, {}, {}, {-0.4031, -0.9152, 0}},
				{{-1, -0, -1e-06}, {}, {}, {-1, 0, 0}},
				{{-0.923879, -0.382684, -1e-06}, {}, {}, {-0.9273, -0.3743, 0}},
				{{-0.707106, 0.707107, -0}, {}, {}, {-0.7188, 0.6952, 0}},
				{{-0.923879, 0.382683, -1e-06}, {}, {}, {-0.9273, 0.3743, 0}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{-0.382683, 0.92388, -0}, {}, {}, {-0.4031, 0.9152, 0}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{-0.923879, -0.382684, -1e-06}, {}, {}, {-0.9273, -0.3743, 0}},
				{{-1, -0, -1e-06}, {}, {}, {-1, 0, 0}},
				{{-0.923879, -0, -0.382684}, {}, {}, {-0.9239, 0, -0.3827}},
				{{-0.853553, -0.382684, -0.353554}, {}, {}, {-0.8567, -0.3743, -0.3548}},
				{{-0.923879, 0.382683, -1e-06}, {}, {}, {-0.9273, 0.3743, 0}},
				{{-0.707106, 0.707107, -0}, {}, {}, {-0.7188, 0.6952, 0}},
				{{-0.653281, 0.707107, -0.270598}, {}, {}, {-0.6641, 0.6952, -0.2751}},
				{{-0.853553, 0.382683, -0.353554}, {}, {}, {-0.8567, 0.3743, -0.3548}},
				{{-0.382683, 0.92388, -0}, {}, {}, {-0.4031, 0.9152, 0}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{-0.353553, 0.92388, -0.146447}, {}, {}, {-0.3724, 0.9152, -0.1542}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{-0.382683, -0.92388, -0}, {}, {}, {-0.4031, -0.9152, 0}},
				{{-0.353553, -0.92388, -0.146447}, {}, {}, {-0.3724, -0.9152, -0.1542}},
				{{-0.707106, -0.707107, -0}, {}, {}, {-0.7188, -0.6952, 0}},
				{{-0.653281, -0.707107, -0.270598}, {}, {}, {-0.6641, -0.6952, -0.2751}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{-0.270598, -0.92388, -0.270598}, {}, {}, {-0.285, -0.9152, -0.285}},
				{{-0.653281, -0.382684, -0.653282}, {}, {}, {-0.6557, -0.3743, -0.6557}},
				{{-0.499999, -0.707107, -0.5}, {}, {}, {-0.5083, -0.6952, -0.5083}},
				{{-0.653281, 0.382683, -0.653282}, {}, {}, {-0.6557, 0.3743, -0.6557}},
				{{-0.707106, -0, -0.707107}, {}, {}, {-0.7071, 0, -0.7071}},
				{{-0.270598, 0.92388, -0.270598}, {}, {}, {-0.285, 0.9152, -0.285}},
				{{-0.499999, 0.707107, -0.5}, {}, {}, {-0.5083, 0.6952, -0.5083}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{-0.353553, 0.382683, -0.853553}, {}, {}, {-0.3548, 0.3743, -0.8567}},
				{{-0.382683, -0, -0.92388}, {}, {}, {-0.3827, 0, -0.9239}},
				{{-0.146446, 0.92388, -0.353553}, {}, {}, {-0.1542, 0.9152, -0.3724}},
				{{-0.270598, 0.707107, -0.653281}, {}, {}, {-0.2751, 0.6952, -0.6641}},
				{{-0.270598, -0.707107, -0.653281}, {}, {}, {-0.2751, -0.6952, -0.6641}},
				{{-0.146446, -0.92388, -0.353553}, {}, {}, {-0.1542, -0.9152, -0.3724}},
				{{-0.353553, -0.382684, -0.853553}, {}, {}, {-0.3548, -0.3743, -0.8567}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
				{{-0, 1, -0}, {}, {}, {0, 1, 0}},
				{{0, -1, -0}, {}, {}, {0, -1, 0}},
		},
		{
				0, 1, 2,
				0, 2, 3,
				4, 5, 6,
				4, 6, 7,
				8, 9, 10,
				8, 10, 11,
				12, 0, 3,
				12, 3, 13,
				1, 14, 2,
				15, 4, 7,
				5, 8, 11,
				5, 11, 6,
				9, 12, 13,
				9, 13, 10,
				11, 10, 16,
				11, 16, 17,
				13, 3, 18,
				13, 18, 19,
				2, 20, 21,
				22, 7, 23,
				6, 11, 17,
				6, 17, 24,
				10, 13, 19,
				10, 19, 16,
				3, 2, 21,
				3, 21, 18,
				7, 6, 24,
				7, 24, 23,
				25, 23, 26,
				24, 17, 27,
				24, 27, 28,
				16, 19, 29,
				16, 29, 30,
				18, 21, 31,
				18, 31, 32,
				23, 24, 28,
				23, 28, 26,
				17, 16, 30,
				17, 30, 27,
				19, 18, 32,
				19, 32, 29,
				21, 33, 31,
				30, 29, 34,
				30, 34, 35,
				32, 31, 36,
				32, 36, 37,
				26, 28, 38,
				26, 38, 39,
				27, 30, 35,
				27, 35, 40,
				29, 32, 37,
				29, 37, 34,
				31, 41, 36,
				42, 26, 39,
				28, 27, 40,
				28, 40, 38,
				39, 38, 43,
				39, 43, 44,
				40, 35, 45,
				40, 45, 46,
				34, 37, 47,
				34, 47, 48,
				36, 49, 50,
				51, 39, 44,
				38, 40, 46,
				38, 46, 43,
				35, 34, 48,
				35, 48, 45,
				37, 36, 50,
				37, 50, 47,
				48, 47, 52,
				48, 52, 53,
				50, 54, 55,
				56, 44, 57,
				43, 46, 58,
				43, 58, 59,
				45, 48, 53,
				45, 53, 60,
				47, 50, 55,
				47, 55, 52,
				44, 43, 59,
				44, 59, 57,
				46, 45, 60,
				46, 60, 58,
				61, 57, 62,
				59, 58, 63,
				59, 63, 64,
				60, 53, 65,
				60, 65, 66,
				52, 55, 67,
				52, 67, 68,
				57, 59, 64,
				57, 64, 62,
				58, 60, 66,
				58, 66, 63,
				53, 52, 68,
				53, 68, 65,
				55, 69, 67,
				68, 67, 70,
				68, 70, 71,
				62, 64, 72,
				62, 72, 73,
				63, 66, 74,
				63, 74, 75,
				65, 68, 71,
				65, 71, 76,
				67, 77, 70,
				78, 62, 73,
				64, 63, 75,
				64, 75, 72,
				66, 65, 76,
				66, 76, 74,
				73, 72, 79,
				73, 79, 80,
				75, 74, 81,
				75, 81, 82,
				76, 71, 83,
				76, 83, 84,
				70, 85, 86,
				87, 73, 80,
				72, 75, 82,
				72, 82, 79,
				74, 76, 84,
				74, 84, 81,
				71, 70, 86,
				71, 86, 83,
				86, 88, 89,
				90, 80, 91,
				79, 82, 92,
				79, 92, 93,
				81, 84, 94,
				81, 94, 95,
				83, 86, 89,
				83, 89, 96,
				80, 79, 93,
				80, 93, 91,
				82, 81, 95,
				82, 95, 92,
				84, 83, 96,
				84, 96, 94,
				93, 92, 97,
				93, 97, 98,
				95, 94, 99,
				95, 99, 100,
				96, 89, 101,
				96, 101, 102,
				91, 93, 98,
				91, 98, 103,
				92, 95, 100,
				92, 100, 97,
				94, 96, 102,
				94, 102, 99,
				89, 104, 101,
				105, 91, 103,
				103, 98, 106,
				103, 106, 107,
				97, 100, 108,
				97, 108, 109,
				99, 102, 110,
				99, 110, 111,
				101, 112, 113,
				114, 103, 107,
				98, 97, 109,
				98, 109, 106,
				100, 99, 111,
				100, 111, 108,
				102, 101, 113,
				102, 113, 110,
				115, 116, 117,
				115, 117, 118,
				119, 120, 121,
				119, 121, 122,
				123, 124, 125,
				126, 127, 128,
				129, 115, 118,
				129, 118, 130,
				116, 119, 122,
				116, 122, 117,
				120, 123, 125,
				120, 125, 121,
				127, 129, 130,
				127, 130, 128,
				131, 128, 132,
				130, 118, 133,
				130, 133, 134,
				117, 122, 135,
				117, 135, 136,
				121, 125, 137,
				121, 137, 138,
				128, 130, 134,
				128, 134, 132,
				118, 117, 136,
				118, 136, 133,
				122, 121, 138,
				122, 138, 135,
				125, 139, 137,
				136, 135, 140,
				136, 140, 141,
				138, 137, 142,
				138, 142, 143,
				132, 134, 144,
				132, 144, 145,
				133, 136, 141,
				133, 141, 146,
				135, 138, 143,
				135, 143, 140,
				137, 147, 142,
				148, 132, 145,
				134, 133, 146,
				134, 146, 144,
				145, 144, 5,
				145, 5, 4,
				146, 141, 9,
				146, 9, 8,
				140, 143, 0,
				140, 0, 12,
				142, 149, 1,
				150, 145, 4,
				144, 146, 8,
				144, 8, 5,
				141, 140, 12,
				141, 12, 9,
				143, 142, 1,
				143, 1, 0,
		}
	};
	const VulkanMeshData box = {
		{
			{{-1, -1, -1}, {}, {}, {1, 1, 1}},
			{{1, -1, -1}, {}, {}, {-1, 1, 1}},
			{{-1, 1, -1}, {}, {}, {1, -1, 1}},
			{{1, 1, -1}, {}, {}, {-1, -1, 1}},
			{{-1, -1, 1}, {}, {}, {1, 1, -1}},
			{{1, -1, 1}, {}, {}, {-1, 1, -1}},
			{{-1, 1, 1}, {}, {}, {1, -1, -1}},
			{{1, 1, 1}, {}, {}, {-1, -1, -1}},
		},
		{
			0, 2, 3,
			0, 3, 1,
			1, 7, 5,
			1, 3, 7,
			4, 5, 7,
			4, 7, 6,
			4, 6, 2,
			4, 2, 0,
			6, 7, 2,
			2, 7, 3,
			1, 5, 4,
			0, 1, 4
		}
	};
	const VulkanMeshData blit = {
		{
			{{-1,-1,0}, {},{0,0},{}},
			{{-1,3,0}, {},{0,2},{}},
			{{3,-1,0}, {},{2,0},{}},
		},
		{0,1,2}
	};



	struct MikktCalculator {
		void generateTangentSpace(VulkanMeshData* model);
		// Return primitive count
		static int  getNumFaces(const SMikkTSpaceContext* context);
		// Return number of vertices in the primitive given by index.
		static int  getNumVerticesOfFace(const SMikkTSpaceContext* context, const int primnum);
		// Write 3-float position of the vertex's point.
		static void getPosition(const SMikkTSpaceContext* context, float pos[], const int primnum, const int vtxnum);
		// Write 3-float vertex normal.
		static void getNormal(const SMikkTSpaceContext* context, float normal[], const int primnum, const int vtxnum);
		// Write 2-float vertex uv.
		static void getTexCoord(const SMikkTSpaceContext* context, float uv[], const int primnum, const int vtxnum);
		// Compute and set attributes on the geometry vertex.
		static void setTSpaceBasic(const SMikkTSpaceContext* context, const float tangentu[], const float sign, const int primnum, const int vtxnum);
		// We leave this one out since I haven't found a use for it yet
		//static void setTSpace(const SMikkTSpaceContext* context, const float tangentu[], const float tangentv[], const float magu, const float magv, const tbool keep, const int primnum, const int vtxnum);
	};
}

namespace std {
	template<> struct hash<vku::Vertex> {
		size_t operator()(vku::Vertex const& vertex) const {
			return hash<glm::vec3>()(vertex.pos) ^ hash<glm::vec3>()(vertex.color) ^ hash<glm::vec2>()(vertex.texCoord) ^ hash<glm::vec3>()(vertex.normal) ^ hash<glm::vec3>()(vertex.tangent);
		}
	};
}